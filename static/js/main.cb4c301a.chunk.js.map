{"version":3,"sources":["assets/img/vinyl-record.png","components/Wrapper.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","PAGINATION_SIZES","Wrapper","state","filterBySinger","filterByGanre","filterByYear","sortingParameter","list","data","currentPage","pageSize","onFilterChangeBySinger","bind","onFilterChangeByGanre","onFilterChangeByYear","onNextClick","onPrevClick","onChangePageSize","renderTableHead","musicList","this","filter","element","singer","ganre","year","sort","element1","element2","startIndex","endIndex","slice","filteredList","getFilteredMusicList","sortedMusicList","getSortedMusicList","getPaginatedMusicList","Math","ceil","music","length","arr","result","str","includes","push","event","setState","target","value","getMaxPage","singerArray","map","singerElement","unique","index","key","className","ganreArray","ganreElement","yearArray","yearElement","a","b","getFormattedMusicList","musicElement","indexOfMusicElement","song","paginationSize","pagination","classnames","onClick","renderPaginationSizes","onChange","renderSingerOptions","renderGanreOptions","renderYearOptions","singerCellClasses","songCellClasses","ganreCellClasses","yearCellClasses","onSortingChange","renderMusic","url","logoIcon","renderIcon","renderTable","renderFilters","renderPagination","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb4c301a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vinyl-record.9b63c65a.png\";","import React, {Component} from 'react';\r\nimport data from '../music.json';\r\nimport classnames from 'classnames';\r\nimport Favicon from 'react-favicon';\r\nimport logoIcon from '../assets/img/vinyl-record.png';\r\n\r\nconst PAGINATION_SIZES = [5, 10, 20, 30];\r\n\r\nexport default class Wrapper extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      filterBySinger: 'All',\r\n      filterByGanre: 'All',\r\n      filterByYear: 'All',\r\n      sortingParameter: null,\r\n      list: data,\r\n      currentPage: 1,\r\n      pageSize: 10\r\n    };\r\n  \r\n    this.onFilterChangeBySinger = this.onFilterChangeBySinger.bind(this);\r\n    this.onFilterChangeByGanre = this.onFilterChangeByGanre.bind(this);\r\n    this.onFilterChangeByYear = this.onFilterChangeByYear.bind(this);\r\n    this.onNextClick = this.onNextClick.bind(this);\r\n    this.onPrevClick = this.onPrevClick.bind(this);\r\n    this.onChangePageSize = this.onChangePageSize.bind(this);\r\n    this.renderTableHead = this.renderTableHead.bind(this);\r\n  }\r\n\r\n  getFilteredMusicList(musicList) {\r\n    if (this.state.filterBySinger !== 'All') {\r\n      musicList = musicList.filter(element => element.singer === this.state.filterBySinger);\r\n    }\r\n\r\n    if (this.state.filterByGanre !== 'All') {\r\n      musicList = musicList.filter(element => element.ganre === this.state.filterByGanre);\r\n    }\r\n\r\n    if (this.state.filterByYear !== 'All') {\r\n      musicList = musicList.filter(element => element.year === this.state.filterByYear);\r\n    }\r\n\r\n    return musicList;\r\n  }\r\n\r\n  getSortedMusicList(musicList) {\r\n    if (this.state.sortingParameter === null) {\r\n      return musicList;\r\n    }\r\n\r\n    return [...musicList].sort((element1, element2) => {\r\n      if (element1[this.state.sortingParameter] > element2[this.state.sortingParameter]) {\r\n        return 1;\r\n      }\r\n\r\n      if (element1[this.state.sortingParameter] < element2[this.state.sortingParameter]) {\r\n        return -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  getPaginatedMusicList(musicList) {\r\n    let startIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n    let endIndex = startIndex + this.state.pageSize;\r\n\r\n    return musicList.slice(startIndex, endIndex);\r\n  }\r\n\r\n  getFormattedMusicList(musicList) {\r\n    const filteredList = this.getFilteredMusicList(musicList);\r\n    const sortedMusicList = this.getSortedMusicList(filteredList);\r\n    const paginatedMusicList = this.getPaginatedMusicList(sortedMusicList);\r\n\r\n    return paginatedMusicList;\r\n  }\r\n\r\n  getMaxPage() {\r\n    return Math.ceil(this.state.list.music.length / this.state.pageSize);\r\n  }\r\n\r\n  unique(arr) {\r\n    let result = [];\r\n  \r\n    for (let str of arr) {\r\n      if (!result.includes(str)) {\r\n        result.push(str);\r\n      }\r\n    }\r\n  \r\n    return result;\r\n  }\r\n\r\n  onFilterChangeBySinger(event) {\r\n    this.setState({ filterBySinger: event.target.value });\r\n  }\r\n\r\n  onFilterChangeByGanre(event) {\r\n    this.setState({ filterByGanre: event.target.value });\r\n  }\r\n\r\n  onFilterChangeByYear(event) {\r\n    this.setState({ filterByYear: event.target.value });\r\n  }\r\n\r\n  onSortingChange(sortingParameter) {\r\n    if (sortingParameter === this.state.sortingParameter) {\r\n      this.setState({ sortingParameter: null })\r\n    } else {\r\n      this.setState({ sortingParameter});\r\n    }\r\n  }\r\n\r\n  onPrevClick() {\r\n    if (this.state.currentPage - 1 === 0) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      currentPage: this.state.currentPage - 1,\r\n    });\r\n  }\r\n\r\n  onNextClick() {\r\n    if (this.state.currentPage + 1 > this.getMaxPage()) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      currentPage: this.state.currentPage + 1,\r\n    });\r\n  }\r\n\r\n  onChangePageSize(pageSize) {\r\n    this.setState({ pageSize });\r\n  }\r\n\r\n  renderSingerOptions() {\r\n    let singerArray = this.state.list.music.map((singerElement) => {\r\n      return singerElement.singer;\r\n    });\r\n\r\n    singerArray = this.unique(singerArray);\r\n\r\n    return singerArray.map((singerElement, index) => {\r\n      return (\r\n        <option key={index} className=\"wrapper__filter-option\" value={singerElement}>{singerElement}</option>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderGanreOptions() {\r\n    let ganreArray = this.state.list.music.map((ganreElement) => {\r\n      return ganreElement.ganre;\r\n    });\r\n\r\n    ganreArray = this.unique(ganreArray);\r\n\r\n    return ganreArray.map((ganreElement, index) => {\r\n      return (\r\n        <option key={index} className=\"wrapper__filter-option\" value={ganreElement}>{ganreElement}</option>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderYearOptions() {\r\n    let yearArray = this.state.list.music.map((yearElement) => {\r\n      return yearElement.year;\r\n    });\r\n\r\n    yearArray = this.unique(yearArray);\r\n\r\n    yearArray = yearArray.sort(function(a, b) {\r\n      return a - b;\r\n    });\r\n\r\n    return yearArray.map((yearElement, index) => {\r\n      return (\r\n        <option key={index} className=\"wrapper__filter-option\" value={yearElement}>{yearElement}</option>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderMusic() {\r\n    let musicList = this.state.list.music;\r\n    const formattedMusicList = this.getFormattedMusicList(musicList);\r\n    \r\n    return formattedMusicList.map((musicElement, indexOfMusicElement) => {\r\n        return (\r\n          <tr key={indexOfMusicElement} className=\"wrapper__table-row\">\r\n            <td className=\"wrapper__table-cell\">\r\n              <p className=\"wrapper__table-text\">{indexOfMusicElement + 1}</p>\r\n            </td>\r\n            <td className=\"wrapper__table-cell\">\r\n              <p className=\"wrapper__table-text\">{musicElement.singer}</p>\r\n            </td>\r\n            <td className=\"wrapper__table-cell\">\r\n              <p className=\"wrapper__table-text\">{musicElement.song}</p>\r\n            </td>\r\n            <td className=\"wrapper__table-cell\">\r\n              <p className=\"wrapper__table-text\">{musicElement.ganre}</p>\r\n            </td>\r\n            <td className=\"wrapper__table-cell\">\r\n              <p className=\"wrapper__table-text\">{musicElement.year}</p>\r\n            </td>\r\n          </tr>\r\n        );\r\n    });\r\n  }\r\n\r\n  renderPaginationSizes() {\r\n    return PAGINATION_SIZES.map((paginationSize, index) => {\r\n      const pagination = classnames('wrapper__pagination-size', {'wrapper__pagination-size_active': paginationSize === this.state.pageSize});\r\n      return (\r\n        <div key={index} className={pagination} onClick={() => this.onChangePageSize(paginationSize)}>{paginationSize}</div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPagination() {\r\n    return (\r\n      <div className=\"wrapper__pagination\">\r\n          <div className=\"wrapper__pagination-container\">\r\n            <div className=\"wrapper__pagination-prev\" onClick={this.onPrevClick}>←</div>\r\n            <div className=\"wrapper__pagination-current\">{this.state.currentPage}</div>\r\n            <div className=\"wrapper__pagination-next\" onClick={this.onNextClick}>→</div>\r\n          </div>\r\n          <div className=\"wrapper__pagination-container\">\r\n            {this.renderPaginationSizes()}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFilters() {\r\n    return (\r\n      <div className=\"wrapper__filter\">\r\n        <label className=\"wrapper__filter-label\">\r\n          Singer:\r\n          <select className=\"wrapper__filter-select\" onChange={this.onFilterChangeBySinger}>\r\n            <option className=\"wrapper__filter-option\" value=\"All\">All</option>\r\n            {this.renderSingerOptions()}\r\n          </select>\r\n        </label>\r\n        <label className=\"wrapper__filter-label\">\r\n          Ganre:\r\n          <select className=\"wrapper__filter-select\" onChange={this.onFilterChangeByGanre}>\r\n            <option className=\"wrapper__filter-option\" value=\"All\">All</option>\r\n            {this.renderGanreOptions()}\r\n          </select>\r\n        </label>\r\n        <label className=\"wrapper__filter-label\">\r\n          Year:\r\n          <select className=\"wrapper__filter-select\" onChange={this.onFilterChangeByYear}>\r\n            <option className=\"wrapper__filter-option\" value=\"All\">All</option>\r\n            {this.renderYearOptions()}\r\n          </select>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTableHead() {\r\n    const singerCellClasses = classnames('wrapper__table-cell', {'wrapper__table-cell_active': this.state.sortingParameter === 'singer'});\r\n    const songCellClasses = classnames('wrapper__table-cell', {'wrapper__table-cell_active': this.state.sortingParameter === 'song'});\r\n    const ganreCellClasses = classnames('wrapper__table-cell', {'wrapper__table-cell_active': this.state.sortingParameter === 'ganre'});\r\n    const yearCellClasses = classnames('wrapper__table-cell', {'wrapper__table-cell_active': this.state.sortingParameter === 'year'});\r\n\r\n    return (\r\n      <thead className=\"wrapper__table-head\">\r\n        <tr className=\"wrapper__table-row\">\r\n          <td className=\"wrapper__table-cell\">\r\n            <p className=\"wrapper__table-text\">№</p>\r\n          </td>\r\n          <td className={singerCellClasses} onClick={() => this.onSortingChange('singer')}>\r\n            <p className=\"wrapper__table-text\">Singer</p>\r\n          </td>\r\n          <td className={songCellClasses} onClick={() => this.onSortingChange('song')}>\r\n            <p className=\"wrapper__table-text\">Song</p>\r\n          </td>\r\n          <td className={ganreCellClasses} onClick={() => this.onSortingChange('ganre')}>\r\n            <p className=\"wrapper__table-text\">Genre</p>\r\n          </td>\r\n          <td className={yearCellClasses} onClick={() => this.onSortingChange('year')}>\r\n            <p className=\"wrapper__table-text\">Year</p>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n\r\n  renderTable() {\r\n    return (\r\n      <table className=\"wrapper__table\">\r\n        {this.renderTableHead()}\r\n        <tbody className=\"wrapper__table-body\">\r\n          {this.renderMusic()}\r\n        </tbody>   \r\n      </table>\r\n    );\r\n  }\r\n\r\n  renderIcon() {\r\n    return (\r\n      <div>\r\n        <Favicon url={logoIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {this.renderIcon()}\r\n        <div className=\"wrapper__container\">\r\n          {this.renderTable()}\r\n          {this.renderFilters()}\r\n        </div>\r\n        {this.renderPagination()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Wrapper from './Wrapper';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Wrapper />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/main.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}